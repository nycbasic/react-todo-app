{"version":3,"sources":["components/items.jsx","components/display_items.jsx","components/navbar.jsx","components/App.js","registerServiceWorker.js","index.js"],"names":["Message","props","items","map","val","i","className","onClick","onDelete","DisplayItems","class","role","type","onSubmit","placeholder","aria-label","aria-describedby","value","inputValue","onChange","onInputChange","onClear","Navbar","App","state","input","handleChange","e","setState","target","submitItem","alert","document","querySelector","innerHTML","style","opacity","setTimeout","length","concat","clearItem","deleteItem","item","newMsgs","filter","this","Fragment","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e845d8fc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Message = props => {\n  return props.items.map((val, i) => {\n    return (\n      <li key={i} className=\"list-group-item\">\n        {val}\n        <i\n          onClick={() => props.onDelete(val)}\n          className=\"far fa-times-circle\"\n        />\n      </li>\n    );\n  });\n};\n\nexport default Message;\n","import React from \"react\";\nimport Items from \"./items\";\n\nconst DisplayItems = props => {\n  return (\n    <div className=\"main\">\n      <h2>To-Do List</h2>\n      <div className=\"container\">\n        <div class=\"alert alert-warning\" role=\"alert\" />\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn btn-outline-primary\"\n              type=\"button\"\n              onClick={props.onSubmit}\n            >\n              Submit\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"\"\n            aria-label=\"Example text with two button addons\"\n            aria-describedby=\"button-addon3\"\n            value={props.inputValue}\n            onChange={props.onInputChange}\n          />\n        </div>\n        <ul className=\"list-group\">\n          <Items items={props.items} onDelete={props.onDelete} />\n        </ul>\n        <button\n          className=\"btn btn-danger\"\n          type=\"button\"\n          onClick={props.onClear}\n        >\n          Clear List\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayItems;\n","import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container\">\n        <span className=\"navbar-brand mb-0 h1\">Simple Todo-List: React</span>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport DisplayItems from \"./display_items\";\nimport Navbar from \"./navbar\";\n\nclass App extends Component {\n  state = {\n    input: \"\",\n    items: [\"Pick up eggs\", \"Haircut appointment\", \"Finish To do app\"]\n  };\n\n  handleChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  submitItem = () => {\n    const alert = document.querySelector(\".alert\");\n\n    if (this.state.input === \"\") {\n      alert.innerHTML = \"Please enter text\";\n      alert.style.opacity = 1;\n      setTimeout(() => {\n        alert.style.opacity = 0;\n      }, 3000);\n    } else if (this.state.input.length <= 4) {\n      alert.innerHTML = \"Please enter text longer than 4 characters\";\n      alert.style.opacity = 1;\n      setTimeout(() => {\n        alert.style.opacity = 0;\n      }, 3000);\n    } else {\n      this.setState({\n        items: this.state.items.concat(this.state.input),\n        input: \"\"\n      });\n    }\n  };\n\n  clearItem = () => {\n    this.setState({\n      items: []\n    });\n  };\n\n  deleteItem = item => {\n    const newMsgs = this.state.items.filter(val => {\n      return item !== val;\n    });\n    this.setState({\n      items: newMsgs\n    });\n  };\n\n  render() {\n    const { handleChange, submitItem, clearItem, deleteItem } = this;\n    const { input, items } = this.state;\n    return (\n      <React.Fragment>\n        <Navbar />\n        <DisplayItems\n          onInputChange={handleChange}\n          onSubmit={submitItem}\n          onClear={clearItem}\n          onDelete={deleteItem}\n          inputValue={input}\n          items={items}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}